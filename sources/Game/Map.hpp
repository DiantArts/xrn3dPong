#pragma once

#include <xrn/Engine/AScene.hpp>
#include <Game/MessageType.hpp>

namespace game {

///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
// Helpers
//
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

class Map {

public:

    ///////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////
    // Static
    //
    ///////////////////////////////////////////////////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////////////////////////////////////////

    static constexpr const ::glm::vec3 playerScale{ 3.0f, 3.0f, 0.1f };

    static constexpr const ::glm::vec3 mapSize{ 20.0f, 10.0f, 50.0f };

    static constexpr const ::glm::vec3 maxMapPosition{ 17.9f, 8.0f, 50.0f };


    ///////////////////////////////////////////////////////////////////////////
    ///
    ///////////////////////////////////////////////////////////////////////////
    static void loadObjects(
        ::entt::registry& registry
        , ::xrn::engine::vulkan::Device* device
        , ::entt::entity player
        , ::entt::entity enemy
        , ::entt::entity ball
    );

    ///////////////////////////////////////////////////////////////////////////
    ///
    ///////////////////////////////////////////////////////////////////////////
    static void loadMap(
        ::entt::registry& registry
        , ::xrn::engine::vulkan::Device* device
    );

};

} // namespace game
