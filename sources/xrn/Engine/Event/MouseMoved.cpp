///////////////////////////////////////////////////////////////////////////
// Precompilled headers
///////////////////////////////////////////////////////////////////////////
#include <pch.hpp>

///////////////////////////////////////////////////////////////////////////
// Headers
///////////////////////////////////////////////////////////////////////////
#include <xrn/Engine/Event/MouseMoved.hpp>
#include <xrn/Engine/Component/Control.hpp>
#include <xrn/Engine/Configuration.hpp>
#include <xrn/Engine/AScene.hpp>


///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
// Constructors
//
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
::xrn::engine::event::MouseMoved::MouseMoved(
    ::glm::vec2 position
)
    : m_offset{ position.x, position.y }
{
}

///////////////////////////////////////////////////////////////////////////
::xrn::engine::event::MouseMoved::MouseMoved(
    float positionX,
    float positionY
)
    : m_offset{ positionX, positionY }
{
}

///////////////////////////////////////////////////////////////////////////
::xrn::engine::event::MouseMoved::MouseMoved(
    double positionX,
    double positionY
)
    : m_offset{
        static_cast<float>(positionX),
        static_cast<float>(positionY)
    }
{
}



///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
// Resolve
//
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
void ::xrn::engine::event::MouseMoved::resolve(
    ::xrn::engine::AScene& scene
)
{
    auto* playerController{ scene.tryGetPlayerComponent<::xrn::engine::component::Control>() };

    if (playerController) {
        playerController->rotateX(-m_offset.x);
        playerController->rotateY(m_offset.y);
    }
}
